/*
* This code is under GNU Lesser General Public License.
* Simple C Compiler to Low Level Virtual Machine representation
*
* Authors: Rinat Shaikhutdinov (aka Sagit) - architecture, compiler core
*          Alexei Zhdanov (aka Alex) - parser
*          Timofey Tatarinov (aka Tikers) - code generator
*
* University Mari State University
* Faculty Informatics and Computer Science
* Course 4
* Specialization PS-41
* Subject Theory of programming languages and translation methods
* Yoshkar-Ola 2010
*/
#include "stdafx.h"
#include "grammar.h"

using namespace compiler;

const char *const Grammar::spell [] = {
    "end of file", "number constant", "string constant", "(", ")", "[", "]", "{", "}", ";", 
    "char", "break", "float", "int", "double", "main", ">", ">=", "!=", "==", 
    "<", "<=", "identifier", "*", "/", ",", "+", "=", "-", "if", 
    "else", "for", "do", "while", "read", "write", "void", "char constant", 
#ifndef TableDebugInfo
    "program", "global_var_declarations", 
    "main_function", "declaration", "variable", "array", "type", "expression", "array_next", "block", "statements", "statement", 
    "if_statement", "for_statement", "while_statement", "do_while_statement", "assignment_statement", "read_statement", "write_statement", "break_statement", "for_part", "condition", 
    "read_args", "write_args", "else_block", "comparison", "assignment", "term", "add_expression", "sub_expression", "unary_expression", "mult_expression", 
    "div_expression", "unary_operator", "factor", "$accept"
#endif // debug info
}; 

const int Grammar::lhs [] = {
    38, 39, 39, 42, 41, 43, 43, 46, 46, 47, 
    47, 40, 44, 44, 44, 44, 48, 48, 49, 49, 
    49, 49, 49, 49, 49, 49, 51, 52, 53, 55, 
    56, 50, 57, 59, 62, 62, 58, 58, 54, 54, 
    64, 60, 60, 61, 61, 63, 63, 63, 63, 63, 
    63, 45, 45, 45, 66, 67, 65, 65, 65, 69, 
    70, 68, 68, 72, 72, 72, 71, 72, 72, 73}; 

const int Grammar:: rhs[] = {
    2, 3, 0, 2, 2, 4, 0, 3, 0, 3, 
    1, 4, 1, 1, 1, 1, 2, 0, 1, 1, 
    1, 1, 2, 2, 2, 2, 9, 5, 6, 4, 
    4, 6, 1, 3, 2, 0, 1, 0, 3, 1, 
    3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 3, 3, 1, 1, 1, 3, 
    3, 2, 1, 1, 1, 3, 1, 1, 1, 2}; 

const int Grammar::action_default [] = {
    3, 14, 0, 16, 15, 0, 13, 0, 0, 3, 
    2, 0, 1, 0, 0, 18, 11, 12, 7, 40, 
    0, 33, 0, 0, 22, 0, 20, 0, 19, 0, 
    0, 18, 0, 0, 0, 21, 0, 0, 0, 4, 
    69, 0, 65, 68, 67, 53, 59, 0, 63, 58, 
    54, 52, 57, 0, 64, 0, 0, 66, 0, 55, 
    56, 9, 0, 6, 0, 8, 0, 0, 61, 60, 
    62, 0, 39, 23, 26, 0, 0, 0, 0, 0, 
    29, 51, 46, 48, 47, 49, 50, 0, 34, 38, 
    37, 0, 0, 0, 38, 0, 0, 27, 0, 0, 
    0, 36, 0, 32, 35, 0, 0, 42, 30, 0, 
    43, 24, 17, 10, 0, 41, 0, 0, 0, 28, 
    0, 44, 0, 0, 45, 31, 25, 70, 5}; 

const int Grammar::goto_default [] = {
    7, 5, 12, 2, 54, 39, 8, 79, 63, 17, 
    32, 31, 28, 26, 35, 24, 20, 30, 37, 22, 
    91, 78, 106, 122, 103, 87, 19, 51, 45, 50, 
    52, 49, 46, 53, 48, 0}; 

const int Grammar::action_index [] = {
    52, -38, 6, -38, -38, -10, -38, 1, -22, 62, 
    -38, 25, -38, 46, 30, 100, -38, -38, 27, 9, 
    22, -38, 20, 37, -38, 14, -38, 18, -38, 15, 
    13, 92, 11, -2, 23, -38, 21, 26, 117, -38, 
    -38, 117, -38, -38, -38, -38, -38, 43, -38, -38, 
    -38, -38, 32, 51, -38, 80, 117, -38, 117, -38, 
    -38, 28, 117, -38, 42, -38, 117, 117, -38, -38, 
    -38, 8, -38, -38, -38, -6, 7, 117, 12, 74, 
    -38, -38, -38, -38, -38, -38, -38, 117, 31, -9, 
    -38, 3, 117, 2, -13, -1, 34, -38, 79, 4, 
    33, -23, 29, -38, -38, -16, 10, -21, -38, -20, 
    -38, -38, -38, -38, 117, 31, 117, 16, 38, -38, 
    76, 35, 19, 117, -38, -38, -38, -38, -38, 

    -36, -36, -36, -36, -36, -36, -36, -36, 23, 3, 
    -36, -36, -36, -36, -36, 10, -36, -36, -36, -36, 
    -36, -36, -36, -4, -36, -36, -36, -36, -36, -36, 
    -36, 16, -36, -36, -36, -36, -36, -36, -1, -36, 
    -36, 0, -36, -36, -36, -36, -36, -36, -36, -36, 
    -36, -36, -36, -13, -36, -36, -15, -36, -14, -36, 
    -36, -36, 2, -36, -36, -36, -16, -17, -36, -36, 
    -36, 20, -36, -36, -36, -36, -36, -36, -36, -36, 
    -36, -36, -36, -36, -36, -36, -36, 1, -36, 19, 
    -36, -36, 4, -36, 55, -36, 6, -36, -2, -36, 
    7, -36, 9, -36, -36, 13, -36, -36, -36, 18, 
    -36, -36, -36, -36, -5, -36, -18, -36, -9, -36, 
    -6, -36, -36, 21, -36, -36, -36, -36, -36}; 

const int Grammar::action_info [] = {
    18, 127, 18, 96, 109, 11, 18, 102, 100, 18, 
    77, 94, 92, 18, 108, 9, 80, 89, 105, 113, 
    118, 98, 111, 125, 120, 114, 116, 76, 13, 74, 
    18, 73, 38, 62, 71, 126, 15, 15, 16, 16, 
    15, 15, 16, 16, 15, 15, 16, 16, 65, 61, 
    14, 0, 42, 43, 41, 67, 66, 56, 0, 58, 
    123, 56, 1, 58, 4, 6, 3, 0, 56, 56, 
    58, 58, 1, 18, 4, 6, 3, 42, 43, 41, 
    42, 43, 41, 0, 57, 0, 0, 0, 40, 0, 
    82, 83, 86, 81, 84, 85, 0, 0, 18, 0, 
    56, 18, 58, 21, 44, 0, 56, 44, 58, 0, 
    0, 21, 0, 40, 18, 0, 40, 0, 42, 43, 
    41, 27, 18, 25, 23, 34, 29, 36, 0, 27, 
    0, 25, 23, 34, 29, 36, 0, 0, 0, 18, 
    0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 
    0, 0, 0, 0, 40, 

    119, 121, 115, 117, 10, 75, 47, 55, 88, 64, 
    69, 68, 59, 60, 33, 97, 101, 107, 104, 99, 
    33, 70, 107, 33, 33, 93, 112, 128, 121, 0, 
    0, 0, 0, 0, 0, 90, 72, 0, 0, 0, 
    110, 0, 0, 0, 124, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 90, 0, 0, 0, 95, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0}; 

const int Grammar::action_check [] = {
    22, 0, 22, 4, 25, 15, 22, 30, 4, 22, 
    3, 9, 9, 22, 4, 9, 4, 3, 3, 8, 
    4, 3, 9, 4, 3, 27, 3, 33, 3, 9, 
    22, 9, 5, 5, 25, 9, 7, 7, 9, 9, 
    7, 7, 9, 9, 7, 7, 9, 9, 6, 6, 
    4, -1, 1, 2, 3, 23, 24, 26, -1, 28, 
    25, 26, 10, 28, 12, 13, 14, -1, 26, 26, 
    28, 28, 10, 22, 12, 13, 14, 1, 2, 3, 
    1, 2, 3, -1, 4, -1, -1, -1, 37, -1, 
    16, 17, 18, 19, 20, 21, -1, -1, 22, -1, 
    26, 22, 28, 11, 28, -1, 26, 28, 28, -1, 
    -1, 11, -1, 37, 22, -1, 37, -1, 1, 2, 
    3, 29, 22, 31, 32, 33, 34, 35, -1, 29, 
    -1, 31, 32, 33, 34, 35, -1, -1, -1, 22, 
    -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, 
    -1, -1, -1, -1, 37, 

    9, 7, 7, 21, 1, 9, 7, 7, 7, 7, 
    27, 27, 27, 27, 4, 9, 9, 4, 9, 21, 
    4, 34, 4, 4, 4, 21, 10, 4, 7, -1, 
    -1, -1, -1, -1, -1, 16, 16, -1, -1, -1, 
    22, -1, -1, -1, 23, -1, -1, -1, -1, -1, 
    -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
    -1, 16, -1, -1, -1, 20, -1, -1, -1, -1, 
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
    -1};

